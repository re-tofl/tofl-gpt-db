формальные определения LR(k)-грамматик
________________________________________________________________
LR(k)-грамматика - это вид грамматики, которая использует два вида productions (правил):
1. Left-to-right (LR) - справа налево, где каждый символ справа в левой части правила должен быть заменен символом слева в правой части правила.
2. Right-to-left (RL) - слева направо, где каждый символ слева в правой части правила должен быть заменен символом справа в левой части правила.

 LR(k)-грамматика имеет следующее формальное определение:

* Начало грамматики: S
* Контекст-независимые терминалы: T
* Контекст-зависимые терминалы: V
* Non-terminal symbols (символы не терминалов): N
* Productions (правила): P

 LR(k)-грамматика определяется как 5-튜пл (S, T, V, N, P), где:

1. S - начало грамматики (initial symbol)
2. T - контекст-независимые терминалы (terminals)
3. V - контекст-зависимые терминалы (non-terminals)
4. N - не терминалы (non-terminals)
5. P - productions (правила)

 LR(k)-грамматика называется к-ограниченной, если для любого правила P в грамматике существуют такие числа i и j, что:

1. P: A → αβ, где α ∈ (V ∪ T)* и β ∈ (V ∪ T)k+1
2. i ≤ |α| ≤ k и j ≤ |β| ≤ k+1

Вот несколько примеров LR(1)-грамматики:

1. S → aA | bB
A → aA | ε
B → bB | ε

2. S → aA | bB
A → aAa | aa
B → bBb | bb

В этих примерах LR(1)-грамматика определяется как 5-튜пл (S, T, V, N, P), где:

* S - начало грамматики (initial symbol)
* T - контекст-независимые терминалы (terminals): {a, b}
* V - контекст-зависимые терминалы (non-terminals): {A, B}
* N - не терминалы (non-terminals): {A, B}
* P - productions (правила):

1. P1: S → aA
P2: S → bB
P3: A → aA
P4: A → ε
P5: B → bB
P6: B → ε

 LR(1)-грамматика используется в компиляторах для анализа синтаксиса языка программирования и для generation кода компилятора.